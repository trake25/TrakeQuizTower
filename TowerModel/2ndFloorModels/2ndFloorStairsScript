-- 2nd Floor Stairs Script
-- Randomize the stairs in the 2nd floor of the tower.
-- Touching Red colored stairs will teleport back the player to Quiz Door 2 

local platformModel = script.Parent
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")

local quizDoor2 = Workspace:WaitForChild("Trake"):WaitForChild("QuizDoors"):WaitForChild("QuizDoor2")
local teleportPosition = quizDoor2.Position + Vector3.new(0, 5, 0) -- Slightly above to avoid stuck

local allStairs = {}
local dudStairs = {}

local dudPercentage = 0.5 -- Adjust: 50% of platforms are duds

-- Collect all Parts under the model
for _, child in ipairs(platformModel:GetChildren()) do
	if child:IsA("BasePart") then
		table.insert(allStairs, child)
	end
end

-- Randomly assign some parts as dud floors
local totalDuds = math.floor(#allStairs * dudPercentage)
local pickedIndexes = {}

while #dudStairs < totalDuds do
	local randIndex = math.random(1, #allStairs)
	if not pickedIndexes[randIndex] then
		pickedIndexes[randIndex] = true
		local dudPart = allStairs[randIndex]
		table.insert(dudStairs, dudPart)
		
		-- Color them red as indicator
		dudPart.BrickColor = BrickColor.new("Bright red")
	end
end

-- Helper: get player from part
local function getPlayerFromPart(part)
	local character = part:FindFirstAncestorWhichIsA("Model")
	if character then
		return Players:GetPlayerFromCharacter(character)
	end
	return nil
end

-- When player touches dud floor
local function onTouched(part)
	local player = getPlayerFromPart(part)
	if not player then return end

	if player:GetAttribute("Quiz3") then return end
	
	local character = player.Character
	if character and character:FindFirstChild("HumanoidRootPart") then
		character:PivotTo(CFrame.new(teleportPosition))
	end
end

-- Connect dud parts to touch event
for _, dud in ipairs(dudStairs) do
	dud.Touched:Connect(onTouched)
end
