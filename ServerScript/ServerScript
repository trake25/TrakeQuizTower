--ServerScriptService.Script
local Players = game:GetService("Players")

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local quizResultEvent = ReplicatedStorage:WaitForChild("QuizResult")

local ServerStorage = game:GetService("ServerStorage")
local quizData = require(ServerStorage:WaitForChild("QuizData"))

local quizDoors = game:GetService("Workspace"):WaitForChild("Trake"):WaitForChild("QuizDoors")

local doorPositions = {
	["0"] = quizDoors:WaitForChild("SpawnLocation").Position,
	["1"] = quizDoors:WaitForChild("QuizDoor1").Position,
	["2"] = quizDoors:WaitForChild("QuizDoor2").Position,
	["3"] = quizDoors:WaitForChild("QuizDoor3").Position,
}

local TowerWinners = ServerStorage:WaitForChild("TowerWinners")

local function showWinnersList(player)
	local names = {}

	for _, tag in ipairs(TowerWinners:GetChildren()) do
		if tag:IsA("StringValue") then
			table.insert(names, tag.Name .. " (" .. tag.Value .. ")")
		end
	end

	if #names == 0 then
		table.insert(names, "No winners yet!")
	end

	ReplicatedStorage:WaitForChild("ShowWinners"):FireClient(player, names)
end

local function addWinnerEffect(player)
	local character = player.Character or player.CharacterAdded:Wait()

	
	if character:FindFirstChild("WinnerHighlight") then return end

	local highlight = Instance.new("Highlight")
	highlight.Name = "WinnerHighlight"
	highlight.FillColor = Color3.fromRGB(255, 215, 0) -- Gold
	highlight.OutlineColor = Color3.fromRGB(255, 255, 255) -- White
	highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
	highlight.FillTransparency = 0.5
	highlight.OutlineTransparency = 0.2
	highlight.Adornee = character
	highlight.Parent = character
end


quizResultEvent.OnServerEvent:Connect(function(player, quizID, qIndex, answer)
	local correct = quizData[quizID].questions[qIndex].answer

	if answer == correct then
		print(player.Name .. " passed quiz " .. quizID)
		
		player:SetAttribute("LastCheckpointID", quizID)
		player:SetAttribute("Quiz" .. quizID, true)
		player:SetAttribute("qIndex", 0)

		local attributes = player:GetAttributes()

		for name, value in pairs(attributes) do
			print("Attribute:", name, "â†’", value)
		end

		local character = player.Character
		if character then
			for _, part in character:GetChildren() do
				if part:IsA("BasePart") then
					part.CollisionGroup = "QuizPassed"
				end
			end
		end
		
		if player:GetAttribute("Quiz4") then
			print("Player passed all quizzes!")

			local trophyFolder = ServerStorage:FindFirstChild("TowerWinners")
			if trophyFolder then
				if not trophyFolder:FindFirstChild(player.Name) then
					local winnerTag = Instance.new("StringValue")
					winnerTag.Name = player.Name
					winnerTag.Value = os.date("%B %d, %Y - %H:%M")
					winnerTag.Parent = trophyFolder
					player:SetAttribute("TowerWinner", true)
					print(player.Name .. " added to TowerWinners.")
					addWinnerEffect(player)
					showWinnersList(player)		
					
				end
			end
		end

		
	else		
		print("Wrong Answer. Teleporting back to Lastcheckpoint.")
		
		
		local lastID = player:GetAttribute("LastCheckpointID") or "0"
		local doorPos = doorPositions[lastID]

		if doorPos then
			local character = player.Character
			if character and character:FindFirstChild("HumanoidRootPart") then
				player:SetAttribute("qIndex", 0)
				local offset = Vector3.new(0, 5, 0)
				character:PivotTo(CFrame.new(doorPos + offset))				
			end
		else
			warn("No door position found for checkpoint ID:", lastID)
		end		
	end
end)
